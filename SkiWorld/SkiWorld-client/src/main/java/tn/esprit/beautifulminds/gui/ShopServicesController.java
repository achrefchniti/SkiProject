package tn.esprit.beautifulminds.gui;

import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableRow;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import tn.esprit.beautifulminds.persistence.Shop;
import tn.esprit.beautifulminds.services.crud.ShopServicesRemote;

public class ShopServicesController implements Initializable {
	@FXML
	private ComboBox<javafx.scene.control.Label> station;

	@FXML
	private TableView<Shop> tableshop;
	@FXML
	private TableColumn<Shop, String> stationculumn;
	@FXML
	private TableColumn<Shop, String> namecolumn;
	@FXML
	private Button addbut;
	@FXML
	private Button deletebut;
	@FXML
	private TextField Name;

	int currentID;

	private static ObservableList<Shop> liste1 = FXCollections.observableArrayList();
	private static ObservableList<Shop> listS = FXCollections.observableArrayList();

	// Event Listener on Button[#addbut].onAction
	@FXML
	public void addAction(ActionEvent event) {
		// TODO Autogenerated

		Context context = null;
		try {
			context = new InitialContext();
		} catch (NamingException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		ShopServicesRemote ssr = null;
		try {
			ssr = (ShopServicesRemote) context.lookup(
					"SkiWorld-ear/SkiWorld-ejb/ShopServices!tn.esprit.beautifulminds.services.crud.ShopServicesRemote");
		} catch (NamingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		// Shop e = new Shop(Name.getText(), );

	}

	// Event Listener on Button[#deletebut].onAction
	@FXML
	public void DeleteAction(ActionEvent event) {
		// TODO Autogenerated

		int selectedIndex = tableshop.getSelectionModel().getSelectedIndex();
		if (selectedIndex >= 0) {
			Context context = null;
			try {
				context = new InitialContext();
			} catch (NamingException e2) {
				// TODO Auto-generated catch block
				e2.printStackTrace();
			}
			ShopServicesRemote ssr = null;
			try {
				ssr = (ShopServicesRemote) context.lookup(
						"SkiWorld-ear/SkiWorld-ejb/ShopServices!tn.esprit.beautifulminds.services.crud.ShopServicesRemote");
			} catch (NamingException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			int num = tableshop.getSelectionModel().getSelectedItem().getShopId();
			Shop c = ssr.findShopById(num);

			ssr.deleteShop(c);
			tableshop.getItems().remove(c);
			tableshop.getItems().remove(selectedIndex);
			Alert alert = new Alert(Alert.AlertType.INFORMATION);
			alert.setTitle("Delete");
			alert.setContentText("Material Deleted!");
			alert.setHeaderText(null);
			alert.showAndWait();

		} else {
			Alert alert = new Alert(Alert.AlertType.INFORMATION);
			alert.setTitle("Delete");
			alert.setContentText("No selected Item !");
			alert.setHeaderText(null);
			alert.showAndWait();

		}

	}

	public static void initAllListShops() {

		Context context = null;
		try {
			context = new InitialContext();
		} catch (NamingException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		ShopServicesRemote ssr = null;
		try {
			ssr = (ShopServicesRemote) context.lookup(
					"SkiWorld-ear/SkiWorld-ejb/ShopServices!tn.esprit.beautifulminds.services.crud.ShopServicesRemote");
		} catch (NamingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		// TODO Auto-generated method stub
		List<Shop> Shop = ssr.findAllShops();
		Shop.stream().forEach(e -> liste1.add(e));

	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub

		initAllListShops();
		tableshop.setItems(liste1);

		namecolumn.setCellValueFactory(
				cellData -> new SimpleStringProperty(String.valueOf(cellData.getValue().getName())));

		// stationculumn.setCellValueFactory(
		// cellData -> new
		// SimpleStringProperty(stationculum(cellData.getValue().getStation_shop())));

		tableshop.setRowFactory(tv -> {
			TableRow<Shop> row = new TableRow<>();
			row.setOnMouseClicked(event -> {
				if (event.getClickCount() == 1 && (!row.isEmpty())) {
					Shop rowData = row.getItem();
					currentID = rowData.getShopId();

					Name.setText(rowData.getName());

				}
			});
			return row;
		});

		this.initializeComboboxes();

	}

	public void initializeComboboxes() {
		Context context = null;
		try {
			context = new InitialContext();
		} catch (NamingException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		ShopServicesRemote ssr = null;
		try {
			ssr = (ShopServicesRemote) context.lookup(
					"SkiWorld-ear/SkiWorld-ejb/ShopServices!tn.esprit.beautifulminds.services.crud.ShopServicesRemote");
		} catch (NamingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		List<Shop> shops = ssr.findAllShops();
		for (Shop sh : shops) {
			station.getItems().add(new javafx.scene.control.Label(sh.getStation_shop().getName()));
		}

	}
}
